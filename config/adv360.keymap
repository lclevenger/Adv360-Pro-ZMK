/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&hm LGUI EQUAL  &kp N1     &kp N2    &kp N3    &kp N4    &kp N5  &tog 1                                                                                        &mo 5          &kp N6  &kp N7    &kp N8     &kp N9      &kp N0               &hm RGUI MINUS
&hm LALT TAB    &kp Q      &kp W     &kp E     &kp R     &kp T   &mo 2                                                                                         &tog 3         &kp Y   &kp U     &kp I      &kp O       &kp P                &hm RALT BSLH
&hm LCTRL ESC   &kp A      &kp S     &kp D     &kp F     &kp G   &kp LC(LEFT)   &kp LGUI          &kp LALT                      &kp RALT         &hm RGUI ESC  &kp RC(RIGHT)  &kp H   &kp J     &kp K      &kp L       &hm RCTRL SEMICOLON  &hm RCTRL SQT
&kp LSHFT       &kp Z      &kp X     &kp C     &kp V     &kp B                                    &hm LCTRL HOME                &hm RCTRL PG_UP                               &kp N   &kp M     &kp COMMA  &kp PERIOD  &kp SLASH            &kp RSHFT
&kp LALT        &kp GRAVE  &lt 2 F5  &kp LBKT  &kp RBKT          &kp BACKSPACE  &hm LSHFT DELETE  &hm LS(LA(LC(LGUI))) END      &hm RALT PG_DN   &kp ENTER     &kp SPACE              &kp DOWN  &kp UP     &kp LEFT    &kp RIGHT            &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                 &mo 5      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                  &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none   &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                      &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &trans  &kp DEL    &kp END       &trans     &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1         &kp F2  &kp F3     &kp F4  &kp F5  &kp F6  &tog 1                                                &mo 5             &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans         &trans  &trans     &trans  &trans  &trans  &trans                                                &trans            &trans  &trans  &trans  &trans   &trans   &trans
&kp LG(LC(Q))  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans      &kp C_PREV    &kp C_NEXT  &trans            &trans  &trans  &trans  &trans   &trans   &kp LG(LC(Q))
&trans         &trans  &trans     &trans  &trans  &trans                  &trans      &kp C_VOL_UP                                &trans  &tog 4  &trans  &trans   &trans   &trans
&trans         &trans  &kp GLOBE  &trans  &trans          &trans  &trans  &trans      &kp C_VOL_DN  &kp C_MUTE  &kp C_PLAY_PAUSE          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_hrm {
            bindings = <
&kp EQUAL      &kp N1       &kp N2      &kp N3      &kp N4       &kp N5  &tog 1                                                                                        &mo 5             &kp N6  &kp N7       &kp N8      &kp N9      &kp N0               &kp MINUS
&kp TAB        &kp Q        &kp W       &kp E       &kp R        &kp T   &tog 3                                                                                        &kp C_PLAY_PAUSE  &kp Y   &kp U        &kp I       &kp O       &kp P                &kp BSLH
&hm LCTRL ESC  &hm LCTRL A  &hm LALT S  &hm LGUI D  &hm LSHFT F  &kp G   &kp LC(LEFT)   &kp LGUI                     &kp LALT           &kp RALT         &hm RGUI ESC  &kp RC(RIGHT)     &kp H   &hm RSHFT J  &hm RGUI K  &hm RALT L  &hm RCTRL SEMICOLON  &hm RCTRL SQT
&kp LSHFT      &kp Z        &kp X       &kp C       &kp V        &kp B                                               &hm LALT HOME      &hm RALT PG_UP                                   &kp N   &kp M        &kp COMMA   &kp PERIOD  &kp SLASH            &kp RSHFT
&mo 2          &kp GRAVE    &lt 2 F5    &kp LEFT    &kp RIGHT            &kp BACKSPACE  &hm LS(LA(LC(LGUI))) DELETE  &hm LCTRL END      &hm RCTRL PG_DN  &kp ENTER     &kp SPACE                 &kp DOWN     &kp UP      &kp LBKT    &kp RBKT             &mo 2
            >;
        };

        layer_mpv {
            bindings = <
&kp EQUAL  &kp N1       &kp N2    &kp N3    &kp N4     &kp N5  &tog 1                                                                                  &mo 5                            &kp N6  &kp N7    &kp N8    &kp N9      &kp N0               &kp MINUS
&kp TAB    &kp Q        &kp W     &kp E     &kp R      &kp T   &kp C_PLAY_PAUSE                                                                        &kp C_VOLUME_UP                  &kp Y   &kp U     &kp I     &kp O       &kp P                &kp BSLH
&tog 4     &hm LCTRL A  &kp S     &kp D     &kp F      &kp G   &kp C_MUTE        &kp LGUI               &kp LCTRL          &hm LCTRL F6    &hm RGUI Q  &kp C_VOLUME_DOWN                &kp H   &kp J     &kp K     &kp L       &hm RCTRL SEMICOLON  &kp SQT
&kp LSHFT  &kp Z        &kp LALT  &kp C     &kp V      &kp B                                            &hm LALT HOME      &hm RALT PG_UP                                               &kp N   &kp M     &kp RGUI  &kp PERIOD  &kp SLASH            &kp RSHFT
&mo 2      &kp GRAVE    &lt 2 F5  &kp LEFT  &kp RIGHT          &kp BSPC          &hm LEFT_SHIFT DELETE  &hm LALT END       &hm RALT PG_DN  &kp ENTER   &hm LS(LA(LC(RIGHT_GUI))) SPACE          &kp LEFT  &kp DOWN  &kp UP      &kp RIGHT            &mo 2
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
